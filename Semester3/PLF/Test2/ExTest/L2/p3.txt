#|

nivel(l1..ln)	= 0, n=0
			= 1 + max(nivel(st√¢ng(l)),nivel(drept(l)))
|#

(Defun stang(l)
	(aux (cddr l) 0 0)
)

(Defun aux(l nv nm)
	(cond
		((null l) nil)
		((= nv (+ nm 1)) nil)
		(t (cons (car l) (cons (cadr l) (aux (cddr l) (+ nv 1) (+ nm (cadr l))))))
	)
)

(Defun drept(l)
	(aux2 (cddr l) 0 0)
)

(Defun aux2(l nv nm)
	(cond
		((null l) nil)
		((= nv (+ nm 1)) l)
		(t (aux2 (cddr l) (+ nv  1) (+ nm (cadr l))))
	)
)

(Defun nivel(l)
	(cond 
		((null l) 0)
		(t (+ 1 (funcall #'max (nivel (stang l)) (nivel (drept l))))) 
	)
)
















