#|

suma(l)	= l, atom numeric par
	= -l, atom numeric impar
	= 0, atom
	= SUMA(suma(l1),...,suma(ln)), l=(l1..ln) lista

|#

(Defun suma2(l)
	(cond 
		((and (numberp l) (= 0 (mod l 2))) l)
		((numberp l) (- l))
		((atom l) 0)
		(t (apply #'+ (mapcar #'suma2 l)))
	)
)	

